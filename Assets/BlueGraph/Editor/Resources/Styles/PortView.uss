

.portView.port {
	min-height: 12px;
	height: auto; /* Fix expanding port heights for inlined structs */
	--port-color: #18abf2; /* Any type not detected is defaulted to plain object blue */
}

.portView .unity-base-field__label {
	min-width: 0px;
}

.portView .unity-base-field__input {
	min-width: 60px;
}

/* 
	Port themes by data type. Each system type is prefixed with "type-" and periods become dashes.
	Special handling is made for enums and objects that inherit from GameObject

	These are modeled after UE4's Blueprints because I like the aesthetic.
	May change if Unity adopts some standard
*/
.portView.type-System-String {
    --port-color: #fb02d1;
}

.portView.type-System-Boolean {
    --port-color: #940008;
}

.portView.type-System-Int {
    --port-color: #29e0ad;
}

.portView.type-System-Int32 {
    --port-color: #29e0ad;
}

.portView.type-System-Int64 {
    --port-color: #29e0ad;
}

.portView.type-System-Single {
	--port-color: #9efb52;
}

/* TODO: Different vec colors? How often would we use them interchangeably? */

.portView.type-UnityEngine-Vector2 {
    --port-color: #fdc727;
}

.portView.type-UnityEngine-Vector3 {
    --port-color: #fdc727;
}

.portView.type-UnityEngine-Vector4 {
    --port-color: #fdc727;
}

.portView.type-UnityEngine-Quaternion {
    --port-color: #8f9fdd;
}

.portView.type-UnityEngine-Color {
    --port-color: #0e3f7f;
}

.portView.type-UnityEngine-Transform {
	--port-color: #fa711d;
}

/* Anything inheriting a GO. Although ideally it should be prefabs or monobehaviors */
.portView.type-UnityEngine-GameObject {
    --port-color: #5906b7;
}

.portView.type-System-Enum {
    --port-color: #076f64;
}

/* Any other object/class 
.portView.type-UnityEngine-Object {
	--port-color: #18abf2;
}
*/
